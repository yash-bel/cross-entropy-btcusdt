# first neural network with keras tutorial
from numpy import loadtxt
from keras.models import Sequential
from keras.layers import Dense
import pandas as pd
import numpy as np


dataset = pd.read_csv('30min_BTCUSDT.csv')
t_dataset = dataset[:int(0.6*len(dataset))]

len(t_dataset)

X = t_dataset[['Open', 'High', 'Low', 'Close', 'Volume','diff']]
X = np.asarray(X).astype('float32')
Y = t_dataset['buy_signal']

model = Sequential()
model.add(Dense(12, input_dim=6, activation='relu'))
model.add(Dense(8, activation='relu'))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

model.fit(X, Y, epochs=150, batch_size=100)

_, accuracy = model.evaluate(X, Y)
print('Accuracy: %.2f' % (accuracy*100))

(model.predict(test_X))

test_dataset = dataset[int(0.6*len(dataset)):]
test_X = test_dataset[['Open', 'High', 'Low', 'Close', 'Volume','diff']]
test_X = np.asarray(test_X).astype('float32')
predictions = (model.predict(test_X) > 0.5).astype(int)

df = pd.DataFrame(predictions)
df.to_csv('result_30min_BTCUSDT.csv')

test_X = dataset[['Open', 'High', 'Low', 'Close', 'Volume','diff']]
test_X = np.asarray(test_X).astype('float32')
predictions = (model.predict(test_X) > 0.5).astype(int)

df_whole = pd.DataFrame(predictions)
df_whole.to_csv('result_30min_BTCUSDTwhole.csv')
